{"version":3,"sources":["webpack:///./src/IssueEdit.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueReport.jsx"],"names":["IssueEdit","React","Component","fetchData","match","search","showError","query","params","id","result","graphQLFetch","parseInt","constructor","issue","store","initialData","state","invalidFields","showingValidation","onChange","bind","handleSubmit","onValidityChange","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","valid","e","preventDefault","showValidation","Object","keys","length","created","changes","showSuccess","data","issueUpdate","dismissValidation","render","propsId","validationMessage","title","status","owner","effort","description","due","user","context","ControlLabel","toDateString","TextInput","NumInput","DateInput","signedIn","contextType","UserContext","IssueEditWithToast","withToast","IssueFilter","location","URLSearchParams","get","effortMin","effortMax","changed","onChangeStatus","onChangeEffortMin","onChangeEffortMax","applyFilter","showOriginalFilter","prevSearch","effortString","history","urlBase","set","toString","push","pathname","withRouter","SECTION_SIZE","PageLink","page","activePage","children","cloneElement","disabled","IssueList","vars","hasSelection","selectedId","Number","isNaN","idInt","issueList","issues","pages","selectedIssue","closeIssue","deleteIssue","index","newList","issueDelete","splice","undoMessage","restoreIssue","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","IssueListWithToast","statuses","IssueReport","stats","issueCounts","headerColumns","map","statRows","counts","IssueReportWithToast"],"mappings":"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","file":"server.786087f5ad0153493c94.hot-update.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Col, Panel, Form, FormGroup, FormControl, ControlLabel,\n  ButtonToolbar, Button, Alert,\n} from 'react-bootstrap';\nimport UserContext from './UserContext.js';\nimport withToast from './withToast.jsx';\nimport store from './store.js';\n\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport DateInput from './DateInput.jsx';\nimport TextInput from './TextInput.jsx';\n\nclass IssueEdit extends React.Component {\n  static async fetchData(match, search, showError) {\n    const query = `query issue($id: Int!) {\n      issue(id: $id) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n\n    const { params: { id } } = match;\n    const result = await graphQLFetch(query, { id: parseInt(id, 10) }, showError);\n    return result;\n  }\n\n  constructor() {\n    super();\n    const issue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n    this.state = {\n      issue,\n      invalidFields: {},\n      showingValidation: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { issue } = this.state;\n    if (issue == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params: { id: prevId } } } = prevProps;\n    const { match: { params: { id } } } = this.props;\n    if (id !== prevId) {\n      this.loadData();\n    }\n  }\n\n  onChange(event, naturalValue) {\n    const { name, value: textValue } = event.target;\n    const value = naturalValue === undefined ? textValue : naturalValue;\n    this.setState(prevState => ({\n      issue: { ...prevState.issue, [name]: value },\n    }));\n  }\n\n  onValidityChange(event, valid) {\n    const { name } = event.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) {\n        delete invalidFields[name];\n      }\n      return { invalidFields };\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.showValidation();\n    const { issue, invalidFields } = this.state;\n    if (Object.keys(invalidFields).length !== 0) {\n      return;\n    }\n    const query = `mutation issueUpdate(\n      $id: Int!\n      $changes: IssueUpdateInputs!\n    ) {\n      issueUpdate(\n        id: $id\n        changes: $changes\n      ) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n\n    const { id, created, ...changes } = issue;\n    const { showSuccess, showError } = this.props;\n    const data = await graphQLFetch(query, { changes, id: parseInt(id, 10) }, showError);\n    if (data) {\n      this.setState({ issue: data.issueUpdate });\n      showSuccess('Updated issue successfully');\n    }\n  }\n\n  async loadData() {\n    const { match, showError } = this.props;\n    const data = await IssueEdit.fetchData(match, null, showError);\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  render() {\n    const { issue } = this.state;\n    if (issue == null) {\n      return null;\n    }\n\n    const { issue: { id } } = this.state;\n    const { match: { params: { id: propsId } } } = this.props;\n    if (id == null) {\n      if (propsId != null) {\n        return <h3>{`Issue with ID ${propsId} not  found.`}</h3>;\n      }\n      return null;\n    }\n\n    const { invalidFields, showingValidation } = this.state;\n    let validationMessage;\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting.\n        </Alert>\n      );\n    }\n    const { issue: { title, status } } = this.state;\n    const { issue: { owner, effort, description } } = this.state;\n    const { issue: { created, due } } = this.state;\n    const user = this.context;\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form horizontal onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Created\n              </Col>\n              <Col sm={9}>\n                <FormControl.Static>\n                  {created.toDateString()}\n                </FormControl.Static>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Status</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"status\"\n                  value={status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"New\">New</option>\n                  <option value=\"Assigned\">Assigned</option>\n                  <option value=\"Fixed\">Fixed</option>\n                  <option value=\"Closed\">Closed</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Owner</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"owner\"\n                  value={owner}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Effort</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"effort\"\n                  value={effort}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup validationState={\n                            invalidFields.due ? 'error' : null\n                        }\n            >\n              <Col componentClass={ControlLabel} sm={3}>Due</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={DateInput}\n                  onValidityChange={this.onValidityChange}\n                  name=\"due\"\n                  value={due}\n                  onChange={this.onChange}\n                  key={id}\n                />\n                <FormControl.Feedback />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Title</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  size={50}\n                  name=\"title\"\n                  value={title}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Description</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  rows={4}\n                  cols={50}\n                  name=\"description\"\n                  value={description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={6}>\n                <ButtonToolbar>\n                  <Button disabled={!user.signedIn} bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                  <LinkContainer to=\"/issues\">\n                    <Button bsStyle=\"link\">Back</Button>\n                  </LinkContainer>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={9}>{validationMessage}</Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\n          {' | '}\n          <Link to={`/edit/${id + 1}`}>Next</Link>\n        </Panel.Footer>\n      </Panel>\n    );\n  }\n}\nIssueEdit.contextType = UserContext;\nconst IssueEditWithToast = withToast(IssueEdit);\nIssueEditWithToast.fetchData = IssueEdit.fetchData;\nexport default IssueEditWithToast;\n","import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { withRouter } from 'react-router-dom';\nimport {\n  ButtonToolbar, Button, FormGroup, FormControl, ControlLabel, InputGroup,\n  Row, Col,\n} from 'react-bootstrap';\n\nclass IssueFilter extends React.Component {\n  constructor({ location: { search } }) {\n    super();\n    const params = new URLSearchParams(search);\n    this.state = {\n      status: params.get('status') || '',\n      effortMin: params.get('effortMin') || '',\n      effortMax: params.get('effortMax') || '',\n      changed: false,\n    };\n\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onChangeEffortMin = this.onChangeEffortMin.bind(this);\n    this.onChangeEffortMax = this.onChangeEffortMax.bind(this);\n    this.applyFilter = this.applyFilter.bind(this);\n    this.showOriginalFilter = this.showOriginalFilter.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.showOriginalFilter();\n    }\n  }\n\n  onChangeStatus(e) {\n    this.setState({ status: e.target.value, changed: true });\n  }\n\n  onChangeEffortMin(e) {\n    const effortString = e.target.value;\n    if (effortString.match(/^\\d*$/)) {\n      this.setState({ effortMin: e.target.value, changed: true });\n    }\n  }\n\n  onChangeEffortMax(e) {\n    const effortString = e.target.value;\n    if (effortString.match(/^\\d*$/)) {\n      this.setState({ effortMax: e.target.value, changed: true });\n    }\n  }\n\n  showOriginalFilter() {\n    const { location: { search } } = this.props;\n    const params = new URLSearchParams(search);\n    this.setState({\n      status: params.get('status') || '',\n      effortMin: params.get('effortMin') || '',\n      effortMax: params.get('effortMax') || '',\n      changed: false,\n    });\n  }\n\n  applyFilter() {\n    const { status, effortMin, effortMax } = this.state;\n    const { history, urlBase } = this.props;\n    const params = new URLSearchParams();\n    if (status) {\n      params.set('status', status);\n    }\n    if (effortMin) {\n      params.set('effortMin', effortMin);\n    }\n    if (effortMax) {\n      params.set('effortMax', effortMax);\n    }\n\n    const search = params.toString() ? `?${params.toString()}` : '';\n    history.push({ pathname: urlBase, search });\n  }\n\n  render() {\n    const { status, changed } = this.state;\n    const { effortMin, effortMax } = this.state;\n    return (\n      <Row>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>Status:</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              value={status}\n              onChange={this.onChangeStatus}\n            >\n              <option value=\"\">(All)</option>\n              <option value=\"New\">New</option>\n              <option value=\"Assigned\">Assigned</option>\n              <option value=\"Fixed\">Fixed</option>\n              <option value=\"Closed\">Closed</option>\n            </FormControl>\n          </FormGroup>\n        </Col>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>Effort between:</ControlLabel>\n            <InputGroup>\n              <FormControl value={effortMin} onChange={this.onChangeEffortMin} />\n              <InputGroup.Addon>-</InputGroup.Addon>\n              <FormControl value={effortMax} onChange={this.onChangeEffortMax} />\n            </InputGroup>\n          </FormGroup>\n        </Col>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>&nbsp;</ControlLabel>\n            <ButtonToolbar>\n              <Button bsStyle=\"primary\" type=\"button\" onClick={this.applyFilter}>\n                Apply\n              </Button>\n              <Button\n                type=\"button\"\n                onClick={this.showOriginalFilter}\n                disabled={!changed}\n              >\n                Reset\n              </Button>\n            </ButtonToolbar>\n          </FormGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(IssueFilter);\n","import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Panel, Pagination, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport withToast from './withToast.jsx';\nimport store from './store.js';\n\nconst SECTION_SIZE = 5;\n\nfunction PageLink({\n  params, page, activePage, children,\n}) {\n  params.set('page', page);\n  if (page === 0) {\n    return React.cloneElement(children, { disabled: true });\n  }\n  return (\n    <LinkContainer\n      isActive={() => page === activePage}\n      to={{ search: `?${params.toString()}` }}\n    >\n      {children}\n    </LinkContainer>\n  );\n}\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n    if (params.get('status')) {\n      vars.status = params.get('status');\n    }\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) {\n      vars.effortMin = effortMin;\n    }\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) {\n      vars.effortMax = effortMax;\n    }\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    let page = parseInt(params.get('page'), 10);\n    if (Number.isNaN(page)) {\n      page = 1;\n    }\n    vars.page = page;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      $hasSelection: Boolean!\n      $selectedId: Int!\n      $page: Int\n    ) {\n      issueList(\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n        page: $page\n      ) {\n        issues {\n          id title status owner\n          created effort due\n        }\n        pages\n      }\n      issue(id: $selectedId) @include (if : $hasSelection) {\n        id description\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const initialData = store.initialData || { issueList: {} };\n    const {\n      issueList: { issues, pages }, issue: selectedIssue,\n    } = initialData;\n    delete store.initialData;\n    this.state = {\n      issues,\n      selectedIssue,\n      pages,\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n    if (issues == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { search: prevSearch },\n      match: { params: { id: prevId } },\n    } = prevProps;\n    const { location: { search }, match: { params: { id } } } = this.props;\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, match, showError } = this.props;\n    const data = await IssueList.fetchData(match, search, showError);\n    if (data) {\n      this.setState({\n        issues: data.issueList.issues,\n        selectedIssue: data.issue,\n        pages: data.issueList.pages,\n      });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n      issueUpdate(id: $id, changes: { status: Closed }) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const { issues } = this.state;\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id },\n      showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { showSuccess, showError } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n      const undoMessage = (\n        <span>\n          {`Deleted issue ${id} successfully.`}\n          <Button bsStyle=\"link\" onClick={() => this.restoreIssue(id)}>\n            UNDO\n          </Button>\n        </span>\n      );\n      showSuccess(undoMessage);\n    } else {\n      this.loadData();\n    }\n  }\n\n  async restoreIssue(id) {\n    const query = `mutation issueRestore($id: Int!) {\n      issueRestore(id: $id)\n    }`;\n    const { showSuccess, showError } = this.props;\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data) {\n      showSuccess(`Issue ${id} restored successfully.`);\n      this.loadData();\n    }\n  }\n\n  render() {\n    const { issues } = this.state;\n    if (issues == null) {\n      return null;\n    }\n\n    const { selectedIssue, pages } = this.state;\n    const { location: { search } } = this.props;\n\n    const params = new URLSearchParams(search);\n    let page = parseInt(params.get('page'), 10);\n    if (Number.isNaN(page)) {\n      page = 1;\n    }\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\n    const endPage = startPage + SECTION_SIZE - 1;\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\n\n    const items = [];\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\n      params.set('page', i);\n      items.push((\n        <PageLink key={i} params={params} activePage={page} page={i}>\n          <Pagination.Item>{i}</Pagination.Item>\n        </PageLink>\n      ));\n    }\n\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter urlBase=\"/issues\" />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <IssueDetail issue={selectedIssue} />\n        <Pagination>\n          <PageLink params={params} page={prevSection}>\n            <Pagination.Item>{'<'}</Pagination.Item>\n          </PageLink>\n          {items}\n          <PageLink params={params} page={nextSection}>\n            <Pagination.Item>{'>'}</Pagination.Item>\n          </PageLink>\n        </Pagination>\n      </React.Fragment>\n    );\n  }\n}\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\n\nexport default IssueListWithToast;\n","import React from 'react';\nimport { Panel, Table } from 'react-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport withToast from './withToast.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\n\nconst statuses = ['New', 'Assigned', 'Fixed', 'Closed'];\n\nclass IssueReport extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) {\n      vars.status = params.get('status');\n    }\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) {\n      vars.effortMin = effortMin;\n    }\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) {\n      vars.effortMax = effortMax;\n    }\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n    ) {\n      issueCounts(\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n      ) {\n        owner New Assigned Fixed Closed\n      }\n    }`;\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const stats = store.initialData ? store.initialData.issueCounts : null;\n    delete store.initialData;\n    this.state = { stats };\n  }\n\n  componentDidMount() {\n    const { stats } = this.state;\n    if (stats == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, match, showError } = this.props;\n    const data = await IssueReport.fetchData(match, search, showError);\n    if (data) {\n      this.setState({ stats: data.issueCounts });\n    }\n  }\n\n  render() {\n    const { stats } = this.state;\n    if (stats == null) {\n      return null;\n    }\n\n    const headerColumns = (\n      statuses.map(status => (\n        <th key={status}>{status}</th>\n      ))\n    );\n\n    const statRows = stats.map(counts => (\n      <tr key={counts.owner}>\n        <td>{counts.owner}</td>\n        {statuses.map(status => (\n          <td key={status}>{counts[status]}</td>\n        ))}\n      </tr>\n    ));\n\n    return (\n      <>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter urlBase=\"/report\" />\n          </Panel.Body>\n        </Panel>\n        <Table bordered condensed hover responsive>\n          <thead>\n            <tr>\n              <th />\n              {headerColumns}\n            </tr>\n          </thead>\n          <tbody>\n            {statRows}\n          </tbody>\n        </Table>\n      </>\n    );\n  }\n}\n\nconst IssueReportWithToast = withToast(IssueReport);\nIssueReportWithToast.fetchData = IssueReport.fetchData;\nexport default IssueReportWithToast;\n"],"sourceRoot":""}